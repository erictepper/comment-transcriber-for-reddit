CAPTURING SUPERSCRIPT
before parser
(\^)((?:\^*)(?:(?:\[.+?\]\(.+?\))|(?:\(.+?\))|(?:.+?)))(?= |\n|\*|$)

(\^) - group 1
((?:\^*)(?:(?:\[.+\]\(.+\))|(?:\(.+\))|(?:.+?)))(?= |\n|$) - group 2

group 1: new line, space, or carat before start of expression
group 2: expression takes the form "text " or "(text text text)" or "[text](link)" 
(optionally beginning with as many asterisks as needed)

after parser
(\^)((?:\^*)(?:(?:{\\field{\\\*\\fldinst{HYPERLINK ".+?"}}{\\fldrslt .+?}})|(?:\(.+?\))|(?:.+?)))(?= |\n|\*|$|\\)

group 1: new line, space, or carat before start of expression
group 2: expression takes the form "text " or "(text text text)" or 
	 "{\field{\*\fldinst{HYPERLINK "link"}}{\fldrslt text}}"




CAPTURING LISTS
<((?:ol)|(?:ol start=.+?)|(?:ul))>((?:.|\n|\r)+?)<\/\1>

group 1: defines the list as 'ol', 'ol start =text', or 'ul'
group 2: text contained in the list




CAPTURING BOLD/ITALICS (deprecated):
(?<![\*\\])\*{2}(.*)(?<!\\)\*{2}(?!\*)

(?<!\\)(\*{1,3}?)(?![ \*])(.*?)(?<![\\ ])\1


seems best
(?<!\\)(\*{1,3}?)(([^\*\n]|(\\\*))+?)(?<![\\ ])\1
(?<!\\)(\*{1,3}?)(?! )(([^\*\n]|(\\\*))+?)(?<![ ])\1
(?<!\\)(\*{1,3}?)(?! )(([^\*\n]|(\\\*))+?)(?<![\\ ])\1
(?<!\\)(\*{1,3}?)(?! )((?:[^\*\n]|(?:\\\*)|(?: \*))+?)(?<![\\ ])\1 
Above is close to how it works on Reddit, but fails to properly capture backslashes preceding *s

(?<!\\)(\*{1,3}?)(?! )
group 1: anywhere from 1 to three * that are not preceded by a \ and not succeeded by a space

((?:[^\*\n]|(?:\\\*)|(?: \*))+?)
group 2: 1 or more repetitions of a character that is not '*', not a carriage return, or IS the sequence '\*', or IS the sequence ' *'

(?<![\\ ])\1
group 3: a repeat of group 1 that is not preceded by a \ or a space